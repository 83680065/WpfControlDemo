<Window
    x:Class="WpfDemo.WindowsTest.ClipDemo"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convery="clr-namespace:WpfDemo.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfDemo.WindowsTest"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="ClipDemo"
    Width="800"
    Height="450"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Stroke="DarkGray" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="#666"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Stroke="DarkGray" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="#666"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        x:Name="circle"
                                        Width="19"
                                        Height="19"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Stroke="DarkGray" />
                                    <Path
                                        x:Name="arrow"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                        SnapsToDevicePixels="false"
                                        Stroke="#666"
                                        StrokeThickness="2" />
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Margin="0,4,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle
                                Margin="0"
                                SnapsToDevicePixels="true"
                                Stroke="Black"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Ellipse
                                    x:Name="circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="DarkGray" />
                                <Path
                                    x:Name="arrow"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                    SnapsToDevicePixels="false"
                                    Stroke="#666"
                                    StrokeThickness="2" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF3C7FB1" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="circle" Property="Stroke" Value="#FF526C7B" />
                                <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                                <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderStyleMain" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="STHide">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="STShow">
                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                </DoubleAnimationUsingKeyFrames>-->
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                </DoubleAnimationUsingKeyFrames>


                                <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)">
                                -->
                                <!--<EasingDoubleKeyFrame KeyTime="0" Value="0,0,800,0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0,0,800,600" />-->
                                <!--
                                </DoubleAnimationUsingKeyFrames>-->
                            </Storyboard>

                            <!--<Storyboard x:Key="show">
                                <RectAnimation
                                    Storyboard.TargetName="ExpandSite"
                                    Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)"
                                    From="{Binding ElementName=ExpandSite, Converter={x:Static convery:RectConverter.Ins}, ConverterParameter='0'}"
                                    To="{Binding ElementName=ExpandSite, Converter={x:Static convery:RectConverter.Ins}, ConverterParameter='1'}"
                                    Duration="0:0:0.2" />

                            </Storyboard>
                            <Storyboard x:Key="hide">
                                <RectAnimation
                                    Storyboard.TargetName="ExpandSite"
                                    Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)"
                                    From="0,0,800,600"
                                    To="0,0,800,0"
                                    Duration="0:0:0.2" />
                            </Storyboard>-->

                            <!--<Storyboard x:Key="show2">
                                <RectAnimation
                                    Storyboard.TargetName="ExpandSite"
                                    Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)"
                                    From="{x:Static convery:RectConverter.From}"
                                    To="{x:Static convery:RectConverter.To}"
                                    Duration="0:0:0.2" />

                            </Storyboard>
                            <Storyboard x:Key="hide2">
                                <RectAnimation
                                    Storyboard.TargetName="ExpandSite"
                                    Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)"
                                    From="{x:Static convery:RectConverter.To}"
                                    To="{x:Static convery:RectConverter.From}"
                                    Duration="0:0:0.2" />
                            </Storyboard>-->
                            
                            <Storyboard x:Key="hide">
                                <RectAnimation
                                    Storyboard.TargetName="ExpandSite"
                                    Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)"
                                    From="0,0,800,600"
                                    To="0,0,800,0"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                            
                            <Storyboard x:Key="show">
                                <RectAnimation
                                    Storyboard.TargetName="ExpandSite"
                                    Storyboard.TargetProperty="(FrameworkElement.Clip).(RectangleGeometry.Rect)"
                                    From="0,0,800,0"
                                    To="0,0,800,600"
                                    Duration="0:0:0.2" />
                            </Storyboard>

                            <Storyboard x:Key="showNew">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="800" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                           
                            <Storyboard x:Key="hideNew">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="800" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton
                                    x:Name="HeaderSite"
                                    MinWidth="0"
                                    MinHeight="0"
                                    Margin="1"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    DockPanel.Dock="Top"
                                    FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ExpanderDownHeaderStyle}" />
                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    Visibility="Visible">
                                    <ContentPresenter.Clip>
                                        <RectangleGeometry>
                                            <RectangleGeometry.Rect>
                                                <Rect Width="0" Height="0" />
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </ContentPresenter.Clip>
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard Storyboard="{StaticResource STHide}" />
                            </EventTrigger>-->
                            <EventTrigger RoutedEvent="Expander.Expanded">
                                <BeginStoryboard x:Name="STShow_BeginStoryboard" Storyboard="{StaticResource show}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Expander.Collapsed">
                                <BeginStoryboard Storyboard="{StaticResource hide}" />
                            </EventTrigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                                <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                                <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Expander
            Width="1200"
            Height="800"
            Margin="0,5,0,0"
            VerticalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Cursor="Hand"
            IsExpanded="False"
            SnapsToDevicePixels="True"
            Style="{StaticResource ExpanderStyleMain}">
            <Grid Background="Red" />
        </Expander>
    </Grid>
</Window>
