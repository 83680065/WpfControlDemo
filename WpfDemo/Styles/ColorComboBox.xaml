<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WpfDemo.Styles">

    <Style x:Key="ColorComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Height" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BdrMain"
                            Grid.ColumnSpan="3"
                            Background="Transparent" />
                        <Rectangle
                            Grid.Column="1"
                            Width="40"
                            Height="10"
                            VerticalAlignment="Center"
                            Fill="{Binding Color}" />
                        <TextBlock
                            Grid.Column="2"
                            Margin="5,0"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Text="{Binding Name}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="BdrMain" Property="Background" Value="#30FFFFFF" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrMain" Property="Background" Value="#15FFFFFF" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBox_Color" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="32" />
        <Setter Property="BorderBrush" Value="#22BEFF" />
        <Setter Property="Background" Value="#FF051223" />
        <Setter Property="Foreground" Value="#22BEFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="ItemContainerStyle" Value="{StaticResource ColorComboBoxItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border
                            x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="1"
                            Opacity="0.5">
                            <!--<Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/LKsoft.Style.Theme1;component/Resources/Main/textbox_login.png" />
                            </Border.Background>-->
                        </Border>
                        <Grid Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="3" Background="Transparent" />
                            <Rectangle
                                Grid.ColumnSpan="2"
                                Margin="5"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="{Binding RelativeSource={RelativeSource Self}, Path=Tag.Color}"
                                Tag="{TemplateBinding SelectedItem}" />
                        </Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            ClickMode="Press"
                            Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="0,0,25,0"
                            Padding="{TemplateBinding Padding}"
                            VerticalAlignment="Center"
                            Background="#153E3E3E"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Focusable="True"
                            Foreground="{TemplateBinding Foreground}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden" />
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}">
                                <Border
                                    x:Name="DropDownBorder"
                                    Margin="0,0,0,10"
                                    Background="#B20D1127"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1" />
                                <Grid>
                                    <ScrollViewer
                                        MaxHeight="250"
                                        Margin="1,5,1,15"
                                        HorizontalContentAlignment="Stretch"
                                        HorizontalScrollBarVisibility="Auto"
                                        VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Grid>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.7"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBox_Color2" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="32" />
        <Setter Property="BorderBrush" Value="#22BEFF" />
        <Setter Property="Background" Value="#FF051223" />
        <Setter Property="Foreground" Value="#22BEFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="IsDropDownOpen" Value="True"></Setter>-->
        <Setter Property="ItemContainerStyle" Value="{StaticResource ColorComboBoxItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border
                            x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="1"
                            Opacity="0.5" />
                        <Grid Height="{TemplateBinding Height}" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="3" Background="Transparent" />
                            <Rectangle
                                Grid.ColumnSpan="2"
                                Margin="5"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Fill="{Binding RelativeSource={RelativeSource Self}, Path=Tag.Color}"
                                Tag="{TemplateBinding SelectedItem}" />
                        </Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            ClickMode="Press"
                            Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}">
                                <Grid>
                                    <ScrollViewer
                                        MaxHeight="250"
                                        Margin="1,5,1,15"
                                        HorizontalContentAlignment="Stretch"
                                        HorizontalScrollBarVisibility="Auto"
                                        VerticalScrollBarVisibility="Auto">
                                        <Grid Background="Red">
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Button
                                                    x:Name="btnOK"
                                                    Width="90"
                                                    Height="35"
                                                    Content="确认" />
                                                <Button
                                                    Width="90"
                                                    Height="35"
                                                    Content="取消" />
                                            </StackPanel>
                                            <!--<ItemsControl  ItemsSource="{TemplateBinding ItemsSource}"></ItemsControl>-->
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.7"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BdrMain"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <EventTrigger RoutedEvent="Button.Click" SourceName="btnOK">
                            <BeginStoryboard Name="FocusTrueStoryboard">
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="(Popup.IsOpen)">
                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                    </BooleanAnimationUsingKeyFrames>
                                    
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="(ComboBox.IsDropDownOpen)">
                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                    </BooleanAnimationUsingKeyFrames>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding XPath=bord}" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="bord"
                Grid.Column="0"
                BorderBrush="#e8e8e8"
                BorderThickness="2"
                CornerRadius="5,5,5,5" />
            <Border
                Grid.Column="1"
                Background="#e8e8e8"
                CornerRadius="5,5,5,5"
                Cursor="Hand" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z"
                Fill="#e8e8e8"
                Stretch="Fill" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <!--  ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen  -->
                        <ToggleButton
                            x:Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{DynamicResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <!--  必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它  -->
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            Foreground="#2259AA"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{DynamicResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <!--  Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen  -->
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                x:Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{DynamicResource WindowBackgroundBrush}"
                                    BorderBrush="{DynamicResource SolidBorderBrush}"
                                    BorderThickness="1" />
                                <ScrollViewer
                                    CanContentScroll="True"
                                    HorizontalScrollBarVisibility="Auto"
                                    SnapsToDevicePixels="True"
                                    Style="{DynamicResource SimpleScrollViewer}"
                                    VerticalScrollBarVisibility="Auto">
                                    <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                    <StackPanel
                                        Background="Red"
                                        IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>